<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Browser on 标题</title>
    <link>https://ZylFrank.github.io/tags/browser/</link>
    <description>Recent content in Browser on 标题</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 27 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ZylFrank.github.io/tags/browser/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浏览器自动化测试框架</title>
      <link>https://ZylFrank.github.io/posts/selenium/</link>
      <pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ZylFrank.github.io/posts/selenium/</guid>
      <description>Introduction Selenium是一套不同的软件工具，每种工具都有不同的方法来支持测试自动化。大多数Selenium QA工程师专注于最能满足其项目需求的一个或两个工具，但学习所有工具将为您提供许多不同的选项来处理不同的测试自动化问题。整套工具产生了丰富的测试功能，专门针对所有类型的Web应用程序的测试需求。这些操作非常灵活，允许使用许多选项来定位UI元素，并将预期的测试结果与实际的应用程序行为进行比较。Selenium的一个主要功能是支持在多个浏览器平台上执行一个测试。
官方文档
安装 selenium pip install selenium  下载浏览器驱动 在这里下载 这里也可以
起步  创建一个测试浏览器窗口（这里我把chrome浏览器驱动放在了同目录的bin文件夹下）  from selenium import webdriver browserName = webdriver.Chrome(&#39;./bin/chromedriver&#39;);   打开页面  browserName.get(&#39;http://www.baidu.com&#39;);  获取页面元素  按ID  element = driver.find_element_by_id(&amp;quot;coolestWidgetEvah&amp;quot;) or from selenium.webdriver.common.by import By element = driver.find_element(by=By.ID, value=&amp;quot;coolestWidgetEvah&amp;quot;)   按类名  cheeses = driver.find_elements_by_class_name(&amp;quot;cheese&amp;quot;) or from selenium.webdriver.common.by import By cheeses = driver.find_elements(By.CLASS_NAME, &amp;quot;cheese&amp;quot;)   按标签名  frame = driver.find_element_by_tag_name(&amp;quot;iframe&amp;quot;) or from selenium.</description>
    </item>
    
  </channel>
</rss>